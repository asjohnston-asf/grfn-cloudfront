AWSTemplateFormatVersion: 2010-09-09

Parameters:

  ursClientId:
    Type: String

  ursClientPassword:
    Type: String
    NoEcho: true

  secretKey:
    Type: String
    MinLength: 32
    NoEcho: true

  ursHostname:
    Type: String
    AllowedValues:
    - https://uat.urs.earthdata.nasa.gov
    - https://urs.earthdata.nasa.gov
    Default: https://urs.earthdata.nasa.gov

  sessionDurationInSeconds:
    Type: Number
    MinValue: 0
    Default: 60

Outputs:

  DomainName:
    Value: !GetAtt Distribution.DomainName

Resources:

  Secret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref AWS::StackName
      SecretString: !Sub |-
        {
          "ursClientId": "${ursClientId}",
          "ursClientPassword": "${ursClientPassword}",
          "ursHostname": "${ursHostname}",
          "cloudfrontDomain": "${Distribution.DomainName}",
          "secretKey": "${secretKey}",
          "bucket": "${ContentBucket}",
          "sessionDurationInSeconds": ${sessionDurationInSeconds}
        }

  ContentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-content"

  LogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-logs"

  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref AWS::StackName

  ContentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ContentBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            CanonicalUser: !GetAtt OriginAccessIdentity.S3CanonicalUserId
          Resource: !Sub "${ContentBucket.Arn}/*"
          Action: s3:GetObject
        - Effect: Allow
          Principal:
            CanonicalUser: !GetAtt OriginAccessIdentity.S3CanonicalUserId
          Resource: !Sub "${ContentBucket.Arn}"
          Action: s3:ListBucket

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Ref AWS::StackName
        Enabled: True
        PriceClass: PriceClass_100
        Origins:
        - Id: !Ref ContentBucket
          DomainName: !GetAtt ContentBucket.DomainName
          S3OriginConfig:
            OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${OriginAccessIdentity}"
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: False
          TargetOriginId: !Ref ContentBucket
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
          - EventType: viewer-request
            LambdaFunctionARN: !Ref LambdaVersionREPLACE
        Logging:
          Bucket: !GetAtt LogBucket.DomainName
          IncludeCookies: true

  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref AWS::StackName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
          Effect: Allow
      Policies:
      - PolicyName: policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:*.${AWS::StackName}*"
          - Effect: Allow
            Action: secretsmanager:getSecretValue
            Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${AWS::StackName}*"
          - Effect: Allow
            Action: s3:GetObject
            Resource: !Sub "${ContentBucket.Arn}/*"

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref AWS::StackName
      Code: src/
      Handler: main.lambda_handler
      MemorySize: 128
      Role: !GetAtt Role.Arn
      Runtime: python3.7
      Timeout: 5

  LambdaVersionREPLACE:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref Lambda
